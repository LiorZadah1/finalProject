/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { VotingSystem, VotingSystemInterface } from "../VotingSystem";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "voteID",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "voterAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
    ],
    name: "addVoter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "voteID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "optionIndex",
        type: "uint256",
      },
    ],
    name: "castVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "voteID",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "voteName",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        internalType: "string[]",
        name: "voting_options",
        type: "string[]",
      },
    ],
    name: "createVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
    ],
    name: "getAccessibleVotes",
    outputs: [
      {
        internalType: "uint256[]",
        name: "voteIDs",
        type: "uint256[]",
      },
      {
        internalType: "string[]",
        name: "voteNames",
        type: "string[]",
      },
      {
        internalType: "uint256[]",
        name: "startVoteTimes",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "endVoteTimes",
        type: "uint256[]",
      },
      {
        internalType: "bool[]",
        name: "openStatuses",
        type: "bool[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "voteID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "optionIndex",
        type: "uint256",
      },
    ],
    name: "getOptionDetails",
    outputs: [
      {
        internalType: "string",
        name: "optionName",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "countOption",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "voteID",
        type: "uint256",
      },
    ],
    name: "getOptionsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "voteID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "optionsCount",
        type: "uint256",
      },
    ],
    name: "getVoteResults",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextVoteID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "votes",
    outputs: [
      {
        internalType: "string",
        name: "voteName",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "voteID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startVoteTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endVoteTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "optionsCount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "open",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526001805534801561001457600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612115806100646000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638ef42c55116100665780638ef42c55146101365780639efc38831461016a578063ab2f96311461019a578063c6e6a82b146101b8578063e1190243146101d457610093565b8063020ae009146100985780632c0a3f89146100b4578063517a6257146100d05780635df8133014610100575b600080fd5b6100b260048036038101906100ad9190611160565b610205565b005b6100ce60048036038101906100c991906111b3565b6104c9565b005b6100ea60048036038101906100e591906111f3565b610847565b6040516100f7919061122f565b60405180910390f35b61011a600480360381019061011591906111f3565b610867565b60405161012d97969594939291906112f5565b60405180910390f35b610150600480360381019061014b91906111f3565b61093e565b6040516101619594939291906115f3565b60405180910390f35b610184600480360381019061017f91906111b3565b610d0d565b6040516101919190611669565b60405180910390f35b6101a2610dc9565b6040516101af919061122f565b60405180910390f35b6101d260048036038101906101cd91906118a6565b610dcf565b005b6101ee60048036038101906101e991906111b3565b610fe9565b6040516101fc92919061196b565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610293576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028a90611a0d565b60405180910390fd5b600260008481526020019081526020016000206003015442106102eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e290611a79565b60405180910390fd5b6002600084815260200190815260200160002060050160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff161561038f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038690611b0b565b60405180910390fd5b6040518060a001604052808373ffffffffffffffffffffffffffffffffffffffff16815260200160011515815260200160001515815260200160008152602001828152506002600085815260200190815260200160002060050160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff02191690831515021790555060408201518160000160156101000a81548160ff0219169083151502179055506060820151816001015560808201518160020155905050505050565b6002600083815260200190815260200160002060050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff1661056c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056390611b9d565b60405180910390fd5b6002600083815260200190815260200160002060050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160159054906101000a900460ff1615610610576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060790611c09565b60405180910390fd5b6002600083815260200190815260200160002060020154421015801561064c575060026000838152602001908152602001600020600301544211155b61068b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068290611c75565b60405180910390fd5b6002600083815260200190815260200160002060050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154600260008481526020019081526020016000206006015414610739576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073090611d07565b60405180910390fd5b60016002600084815260200190815260200160002060050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160156101000a81548160ff021916908315150217905550806002600084815260200190815260200160002060050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550600260008381526020019081526020016000206004016000828152602001908152602001600020600101600081548092919061083e90611d56565b91905055505050565b600060026000838152602001908152602001600020600701549050919050565b600260205280600052604060002060009150905080600001805461088a90611dcd565b80601f01602080910402602001604051908101604052809291908181526020018280546108b690611dcd565b80156109035780601f106108d857610100808354040283529160200191610903565b820191906000526020600020905b8154815290600101906020018083116108e657829003601f168201915b5050505050908060010154908060020154908060030154908060060154908060070154908060080160009054906101000a900460ff16905087565b6060806060806060600080600190505b600154811015610991578760026000838152602001908152602001600020600601540361098457818061098090611d56565b9250505b808060010191505061094e565b508067ffffffffffffffff8111156109ac576109ab611695565b5b6040519080825280602002602001820160405280156109da5781602001602082028036833780820191505090505b5095508067ffffffffffffffff8111156109f7576109f6611695565b5b604051908082528060200260200182016040528015610a2a57816020015b6060815260200190600190039081610a155790505b5094508067ffffffffffffffff811115610a4757610a46611695565b5b604051908082528060200260200182016040528015610a755781602001602082028036833780820191505090505b5093508067ffffffffffffffff811115610a9257610a91611695565b5b604051908082528060200260200182016040528015610ac05781602001602082028036833780820191505090505b5092508067ffffffffffffffff811115610add57610adc611695565b5b604051908082528060200260200182016040528015610b0b5781602001602082028036833780820191505090505b509150600080600190505b600154811015610d015788600260008381526020019081526020016000206006015403610cf4576002600082815260200190815260200160002060010154888381518110610b6757610b66611dfe565b5b602002602001018181525050600260008281526020019081526020016000206000018054610b9490611dcd565b80601f0160208091040260200160405190810160405280929190818152602001828054610bc090611dcd565b8015610c0d5780601f10610be257610100808354040283529160200191610c0d565b820191906000526020600020905b815481529060010190602001808311610bf057829003601f168201915b5050505050878381518110610c2557610c24611dfe565b5b60200260200101819052506002600082815260200190815260200160002060020154868381518110610c5a57610c59611dfe565b5b6020026020010181815250506002600082815260200190815260200160002060030154858381518110610c9057610c8f611dfe565b5b6020026020010181815250506002600082815260200190815260200160002060080160009054906101000a900460ff16848381518110610cd357610cd2611dfe565b5b6020026020010190151590811515815250508180610cf090611d56565b9250505b8080600101915050610b16565b50505091939590929450565b606060008267ffffffffffffffff811115610d2b57610d2a611695565b5b604051908082528060200260200182016040528015610d595781602001602082028036833780820191505090505b50905060005b83811015610dbe5760026000868152602001908152602001600020600401600082815260200190815260200160002060010154828281518110610da557610da4611dfe565b5b6020026020010181815250508080600101915050610d5f565b508091505092915050565b60015481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5490611a0d565b60405180910390fd5b85600260008881526020019081526020016000206001018190555084600260008881526020019081526020016000206000019081610e9b9190611fd9565b508342610ea891906120ab565b6002600088815260200190815260200160002060020181905550826002600088815260200190815260200160002060020154610ee491906120ab565b60026000888152602001908152602001600020600301819055508160026000888152602001908152602001600020600601819055508051600260008881526020019081526020016000206007018190555060005b8151811015610fc8576040518060400160405280838381518110610f5f57610f5e611dfe565b5b6020026020010151815260200160008152506002600089815260200190815260200160002060040160008381526020019081526020016000206000820151816000019081610fad9190611fd9565b50602082015181600101559050508080600101915050610f38565b5060016000815480929190610fdc90611d56565b9190505550505050505050565b6060600080600260008681526020019081526020016000206004016000858152602001908152602001600020905080600001816001015481805461102c90611dcd565b80601f016020809104026020016040519081016040528092919081815260200182805461105890611dcd565b80156110a55780601f1061107a576101008083540402835291602001916110a5565b820191906000526020600020905b81548152906001019060200180831161108857829003601f168201915b5050505050915092509250509250929050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6110df816110cc565b81146110ea57600080fd5b50565b6000813590506110fc816110d6565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061112d82611102565b9050919050565b61113d81611122565b811461114857600080fd5b50565b60008135905061115a81611134565b92915050565b600080600060608486031215611179576111786110c2565b5b6000611187868287016110ed565b93505060206111988682870161114b565b92505060406111a9868287016110ed565b9150509250925092565b600080604083850312156111ca576111c96110c2565b5b60006111d8858286016110ed565b92505060206111e9858286016110ed565b9150509250929050565b600060208284031215611209576112086110c2565b5b6000611217848285016110ed565b91505092915050565b611229816110cc565b82525050565b60006020820190506112446000830184611220565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611284578082015181840152602081019050611269565b60008484015250505050565b6000601f19601f8301169050919050565b60006112ac8261124a565b6112b68185611255565b93506112c6818560208601611266565b6112cf81611290565b840191505092915050565b60008115159050919050565b6112ef816112da565b82525050565b600060e082019050818103600083015261130f818a6112a1565b905061131e6020830189611220565b61132b6040830188611220565b6113386060830187611220565b6113456080830186611220565b61135260a0830185611220565b61135f60c08301846112e6565b98975050505050505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6113a0816110cc565b82525050565b60006113b28383611397565b60208301905092915050565b6000602082019050919050565b60006113d68261136b565b6113e08185611376565b93506113eb83611387565b8060005b8381101561141c57815161140388826113a6565b975061140e836113be565b9250506001810190506113ef565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b60006114718261124a565b61147b8185611455565b935061148b818560208601611266565b61149481611290565b840191505092915050565b60006114ab8383611466565b905092915050565b6000602082019050919050565b60006114cb82611429565b6114d58185611434565b9350836020820285016114e785611445565b8060005b858110156115235784840389528151611504858261149f565b945061150f836114b3565b925060208a019950506001810190506114eb565b50829750879550505050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61156a816112da565b82525050565b600061157c8383611561565b60208301905092915050565b6000602082019050919050565b60006115a082611535565b6115aa8185611540565b93506115b583611551565b8060005b838110156115e65781516115cd8882611570565b97506115d883611588565b9250506001810190506115b9565b5085935050505092915050565b600060a082019050818103600083015261160d81886113cb565b9050818103602083015261162181876114c0565b9050818103604083015261163581866113cb565b9050818103606083015261164981856113cb565b9050818103608083015261165d8184611595565b90509695505050505050565b6000602082019050818103600083015261168381846113cb565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6116cd82611290565b810181811067ffffffffffffffff821117156116ec576116eb611695565b5b80604052505050565b60006116ff6110b8565b905061170b82826116c4565b919050565b600067ffffffffffffffff82111561172b5761172a611695565b5b61173482611290565b9050602081019050919050565b82818337600083830152505050565b600061176361175e84611710565b6116f5565b90508281526020810184848401111561177f5761177e611690565b5b61178a848285611741565b509392505050565b600082601f8301126117a7576117a661168b565b5b81356117b7848260208601611750565b91505092915050565b600067ffffffffffffffff8211156117db576117da611695565b5b602082029050602081019050919050565b600080fd5b60006118046117ff846117c0565b6116f5565b90508083825260208201905060208402830185811115611827576118266117ec565b5b835b8181101561186e57803567ffffffffffffffff81111561184c5761184b61168b565b5b8086016118598982611792565b85526020850194505050602081019050611829565b5050509392505050565b600082601f83011261188d5761188c61168b565b5b813561189d8482602086016117f1565b91505092915050565b60008060008060008060c087890312156118c3576118c26110c2565b5b60006118d189828a016110ed565b965050602087013567ffffffffffffffff8111156118f2576118f16110c7565b5b6118fe89828a01611792565b955050604061190f89828a016110ed565b945050606061192089828a016110ed565b935050608061193189828a016110ed565b92505060a087013567ffffffffffffffff811115611952576119516110c7565b5b61195e89828a01611878565b9150509295509295509295565b6000604082019050818103600083015261198581856112a1565b90506119946020830184611220565b9392505050565b7f4f6e6c79207468652041646d696e6973747261746f7220616c6c6f776564206d60008201527f616b65207468697320616374696f6e0000000000000000000000000000000000602082015250565b60006119f7602f83611255565b9150611a028261199b565b604082019050919050565b60006020820190508181036000830152611a26816119ea565b9050919050565b7f566f74696e672074696d652068617320656e6465642e00000000000000000000600082015250565b6000611a63601683611255565b9150611a6e82611a2d565b602082019050919050565b60006020820190508181036000830152611a9281611a56565b9050919050565b7f54686520766f7465722065786973747320616c726561647920696e207468652060008201527f73797374656d2e00000000000000000000000000000000000000000000000000602082015250565b6000611af5602783611255565b9150611b0082611a99565b604082019050919050565b60006020820190508181036000830152611b2481611ae8565b9050919050565b7f566f746572206973206e6f74207265676973746572656420666f72207468697360008201527f20766f74652e0000000000000000000000000000000000000000000000000000602082015250565b6000611b87602683611255565b9150611b9282611b2b565b604082019050919050565b60006020820190508181036000830152611bb681611b7a565b9050919050565b7f566f7465722068617320616c726561647920766f7465642e0000000000000000600082015250565b6000611bf3601883611255565b9150611bfe82611bbd565b602082019050919050565b60006020820190508181036000830152611c2281611be6565b9050919050565b7f566f74696e67206973206e6f742063757272656e746c79206163746976652e00600082015250565b6000611c5f601f83611255565b9150611c6a82611c29565b602082019050919050565b60006020820190508181036000830152611c8e81611c52565b9050919050565b7f566f746572206973206e6f742070617274206f66207468652067726f7570206660008201527f6f72207468697320766f74652e00000000000000000000000000000000000000602082015250565b6000611cf1602d83611255565b9150611cfc82611c95565b604082019050919050565b60006020820190508181036000830152611d2081611ce4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611d61826110cc565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611d9357611d92611d27565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611de557607f821691505b602082108103611df857611df7611d9e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611e8f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611e52565b611e998683611e52565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611ed6611ed1611ecc846110cc565b611eb1565b6110cc565b9050919050565b6000819050919050565b611ef083611ebb565b611f04611efc82611edd565b848454611e5f565b825550505050565b600090565b611f19611f0c565b611f24818484611ee7565b505050565b5b81811015611f4857611f3d600082611f11565b600181019050611f2a565b5050565b601f821115611f8d57611f5e81611e2d565b611f6784611e42565b81016020851015611f76578190505b611f8a611f8285611e42565b830182611f29565b50505b505050565b600082821c905092915050565b6000611fb060001984600802611f92565b1980831691505092915050565b6000611fc98383611f9f565b9150826002028217905092915050565b611fe28261124a565b67ffffffffffffffff811115611ffb57611ffa611695565b5b6120058254611dcd565b612010828285611f4c565b600060209050601f8311600181146120435760008415612031578287015190505b61203b8582611fbd565b8655506120a3565b601f19841661205186611e2d565b60005b8281101561207957848901518255600182019150602085019450602081019050612054565b868310156120965784890151612092601f891682611f9f565b8355505b6001600288020188555050505b505050505050565b60006120b6826110cc565b91506120c1836110cc565b92508282019050808211156120d9576120d8611d27565b5b9291505056fea2646970667358221220357ed00046119da86535d8caa3e00b125e481eceb2f8e3a93a23a024f16ec99664736f6c63430008180033";

type VotingSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VotingSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VotingSystem__factory extends ContractFactory {
  constructor(...args: VotingSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      VotingSystem & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): VotingSystem__factory {
    return super.connect(runner) as VotingSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VotingSystemInterface {
    return new Interface(_abi) as VotingSystemInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): VotingSystem {
    return new Contract(address, _abi, runner) as unknown as VotingSystem;
  }
}
